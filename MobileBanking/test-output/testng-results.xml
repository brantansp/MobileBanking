<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="56" ignored="0" total="76" passed="20">
  <reporter-output>
  </reporter-output>
  <suite name="Positive Transaction flow" duration-ms="589263" started-at="2018-03-16T09:55:25Z" finished-at="2018-03-16T10:05:15Z">
    <groups>
    </groups>
    <test name="Non- FInancial transaction" duration-ms="35999" started-at="2018-03-16T09:55:25Z" finished-at="2018-03-16T09:56:01Z">
      <class name="mBankingControlCenter.NonFinancialTransactions">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="beforeMethod" is-config="true" duration-ms="4" started-at="2018-03-16T15:25:25Z" finished-at="2018-03-16T15:25:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.Accountfetch() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="Accountfetch()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="Accountfetch" duration-ms="670" started-at="2018-03-16T15:25:25Z" finished-at="2018-03-16T15:25:26Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at mBankingUtilityCenter.ExtentManager.sendReq(ExtentManager.java:110)
	at mBankingControlCenter.NonFinancialTransactions.Accountfetch(NonFinancialTransactions.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Accountfetch -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="getResult" is-config="true" duration-ms="2" started-at="2018-03-16T15:25:26Z" finished-at="2018-03-16T15:25:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Accountfetch status=FAILURE method=NonFinancialTransactions.Accountfetch()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="AppLogin()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="AppLogin" duration-ms="1713" started-at="2018-03-16T15:25:26Z" finished-at="2018-03-16T15:25:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppLogin -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:25:26Z" finished-at="2018-03-16T15:25:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.AppLogin() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:25:28Z" finished-at="2018-03-16T15:25:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AppLogin status=SUCCESS method=NonFinancialTransactions.AppLogin()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:25:28Z" finished-at="2018-03-16T15:25:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.CancelMMIDAll() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="CancelMMIDAll()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="CancelMMIDAll" duration-ms="8670" started-at="2018-03-16T15:25:28Z" finished-at="2018-03-16T15:25:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.NonFinancialTransactions.CancelMMIDAll(NonFinancialTransactions.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelMMIDAll -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:25:36Z" finished-at="2018-03-16T15:25:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelMMIDAll status=FAILURE method=NonFinancialTransactions.CancelMMIDAll()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="CancelMMIDSingle()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="CancelMMIDSingle" duration-ms="7939" started-at="2018-03-16T15:25:36Z" finished-at="2018-03-16T15:25:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.NonFinancialTransactions.CancelMMIDSingle(NonFinancialTransactions.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelMMIDSingle -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:25:36Z" finished-at="2018-03-16T15:25:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.CancelMMIDSingle() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:25:44Z" finished-at="2018-03-16T15:25:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelMMIDSingle status=FAILURE method=NonFinancialTransactions.CancelMMIDSingle()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:25:44Z" finished-at="2018-03-16T15:25:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.ChequeStatus() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="ChequeStatus()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="ChequeStatus" duration-ms="47" started-at="2018-03-16T15:25:44Z" finished-at="2018-03-16T15:25:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at mBankingUtilityCenter.ExtentManager.sendReq(ExtentManager.java:110)
	at mBankingControlCenter.NonFinancialTransactions.ChequeStatus(NonFinancialTransactions.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChequeStatus -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:25:44Z" finished-at="2018-03-16T15:25:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChequeStatus status=FAILURE method=NonFinancialTransactions.ChequeStatus()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="EmailIDFetch()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="EmailIDFetch" duration-ms="2529" started-at="2018-03-16T15:25:44Z" finished-at="2018-03-16T15:25:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EmailIDFetch -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:25:44Z" finished-at="2018-03-16T15:25:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.EmailIDFetch() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:25:47Z" finished-at="2018-03-16T15:25:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EmailIDFetch status=SUCCESS method=NonFinancialTransactions.EmailIDFetch()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:25:47Z" finished-at="2018-03-16T15:25:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.EmailIDUpdate() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="EmailIDUpdate()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="EmailIDUpdate" duration-ms="1827" started-at="2018-03-16T15:25:47Z" finished-at="2018-03-16T15:25:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EmailIDUpdate -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:25:49Z" finished-at="2018-03-16T15:25:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EmailIDUpdate status=SUCCESS method=NonFinancialTransactions.EmailIDUpdate()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:25:49Z" finished-at="2018-03-16T15:25:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.GenerateMMID() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="GenerateMMID()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="GenerateMMID" duration-ms="4091" started-at="2018-03-16T15:25:49Z" finished-at="2018-03-16T15:25:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.NonFinancialTransactions.GenerateMMID(NonFinancialTransactions.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GenerateMMID -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:25:53Z" finished-at="2018-03-16T15:25:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GenerateMMID status=FAILURE method=NonFinancialTransactions.GenerateMMID()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:25:53Z" finished-at="2018-03-16T15:25:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.MiniStatement() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="MiniStatement()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="MiniStatement" duration-ms="2725" started-at="2018-03-16T15:25:53Z" finished-at="2018-03-16T15:25:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MiniStatement -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:25:56Z" finished-at="2018-03-16T15:25:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MiniStatement status=SUCCESS method=NonFinancialTransactions.MiniStatement()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:25:56Z" finished-at="2018-03-16T15:25:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.RetrieveMMID() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="RetrieveMMID()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="RetrieveMMID" duration-ms="3827" started-at="2018-03-16T15:25:56Z" finished-at="2018-03-16T15:25:59Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.NonFinancialTransactions.RetrieveMMID(NonFinancialTransactions.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RetrieveMMID -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:25:59Z" finished-at="2018-03-16T15:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RetrieveMMID status=FAILURE method=NonFinancialTransactions.RetrieveMMID()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:25:59Z" finished-at="2018-03-16T15:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.StopCheque() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="StopCheque()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="StopCheque" duration-ms="20" started-at="2018-03-16T15:25:59Z" finished-at="2018-03-16T15:25:59Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at mBankingUtilityCenter.ExtentManager.sendReq(ExtentManager.java:110)
	at mBankingControlCenter.NonFinancialTransactions.StopCheque(NonFinancialTransactions.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StopCheque -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:25:59Z" finished-at="2018-03-16T15:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StopCheque status=FAILURE method=NonFinancialTransactions.StopCheque()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:25:59Z" finished-at="2018-03-16T15:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.balanceEnq()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="balanceEnq()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="balanceEnq" duration-ms="1850" started-at="2018-03-16T15:25:59Z" finished-at="2018-03-16T15:26:01Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.NonFinancialTransactions.balanceEnq(NonFinancialTransactions.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- balanceEnq -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:01Z" finished-at="2018-03-16T15:26:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=balanceEnq status=FAILURE method=NonFinancialTransactions.balanceEnq()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:01Z" finished-at="2018-03-16T15:26:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.changeloginpwd() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="changeloginpwd()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="changeloginpwd" duration-ms="21" started-at="2018-03-16T15:26:01Z" finished-at="2018-03-16T15:26:01Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at mBankingUtilityCenter.ExtentManager.sendReq(ExtentManager.java:110)
	at mBankingControlCenter.NonFinancialTransactions.changeloginpwd(NonFinancialTransactions.java:133)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeloginpwd -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:01Z" finished-at="2018-03-16T15:26:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=changeloginpwd status=FAILURE method=NonFinancialTransactions.changeloginpwd()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@322d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- mBankingControlCenter.NonFinancialTransactions -->
    </test> <!-- Non- FInancial transaction -->
    <test name="FInancial transaction" duration-ms="59683" started-at="2018-03-16T09:56:01Z" finished-at="2018-03-16T09:57:01Z">
      <class name="mBankingControlCenter.FinancialTransactions">
        <test-method status="FAIL" signature="Billercategorylist()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="Billercategorylist" duration-ms="265" started-at="2018-03-16T15:26:01Z" finished-at="2018-03-16T15:26:02Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.FinancialTransactions.Billercategorylist(FinancialTransactions.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Billercategorylist -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:01Z" finished-at="2018-03-16T15:26:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.Billercategorylist() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:02Z" finished-at="2018-03-16T15:26:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2AAddBeneficiary() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:02Z" finished-at="2018-03-16T15:26:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Billercategorylist status=FAILURE method=FinancialTransactions.Billercategorylist()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="IMPSP2AAddBeneficiary()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2AAddBeneficiary" duration-ms="2826" started-at="2018-03-16T15:26:02Z" finished-at="2018-03-16T15:26:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2AAddBeneficiary -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:04Z" finished-at="2018-03-16T15:26:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2AAddBeneficiary status=SUCCESS method=FinancialTransactions.IMPSP2AAddBeneficiary()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2018-03-16T15:26:04Z" finished-at="2018-03-16T15:26:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2AAddBeneficiaryconfirmation() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="IMPSP2AAddBeneficiaryconfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2AAddBeneficiaryconfirmation" duration-ms="2851" started-at="2018-03-16T15:26:04Z" finished-at="2018-03-16T15:26:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2AAddBeneficiaryconfirmation -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:07Z" finished-at="2018-03-16T15:26:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2AAddBeneficiaryconfirmation status=SUCCESS method=FinancialTransactions.IMPSP2AAddBeneficiaryconfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:07Z" finished-at="2018-03-16T15:26:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2ABeneficiaryPaymentConfirmation() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="IMPSP2ABeneficiaryPaymentConfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2ABeneficiaryPaymentConfirmation" duration-ms="4121" started-at="2018-03-16T15:26:07Z" finished-at="2018-03-16T15:26:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.FinancialTransactions.IMPSP2ABeneficiaryPaymentConfirmation(FinancialTransactions.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2ABeneficiaryPaymentConfirmation -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:11Z" finished-at="2018-03-16T15:26:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2ABeneficiaryPaymentListenquiry() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:11Z" finished-at="2018-03-16T15:26:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2ABeneficiaryPaymentConfirmation status=FAILURE method=FinancialTransactions.IMPSP2ABeneficiaryPaymentConfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="IMPSP2ABeneficiaryPaymentListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2ABeneficiaryPaymentListenquiry" duration-ms="1903" started-at="2018-03-16T15:26:11Z" finished-at="2018-03-16T15:26:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2ABeneficiaryPaymentListenquiry -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:13Z" finished-at="2018-03-16T15:26:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2ABeneficiaryPaymentListenquiry status=SUCCESS method=FinancialTransactions.IMPSP2ABeneficiaryPaymentListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="IMPSP2ABeneficiarySearchListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2ABeneficiarySearchListenquiry" duration-ms="2920" started-at="2018-03-16T15:26:13Z" finished-at="2018-03-16T15:26:16Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.FinancialTransactions.IMPSP2ABeneficiarySearchListenquiry(FinancialTransactions.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2ABeneficiarySearchListenquiry -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:13Z" finished-at="2018-03-16T15:26:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2ABeneficiarySearchListenquiry() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:16Z" finished-at="2018-03-16T15:26:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2ADeleteBeneficiaryConfirmation() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:16Z" finished-at="2018-03-16T15:26:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2ABeneficiarySearchListenquiry status=FAILURE method=FinancialTransactions.IMPSP2ABeneficiarySearchListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="IMPSP2ADeleteBeneficiaryConfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2ADeleteBeneficiaryConfirmation" duration-ms="2059" started-at="2018-03-16T15:26:16Z" finished-at="2018-03-16T15:26:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.FinancialTransactions.IMPSP2ADeleteBeneficiaryConfirmation(FinancialTransactions.java:138)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2ADeleteBeneficiaryConfirmation -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:18Z" finished-at="2018-03-16T15:26:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2ADeleteBeneficiaryConfirmation status=FAILURE method=FinancialTransactions.IMPSP2ADeleteBeneficiaryConfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:18Z" finished-at="2018-03-16T15:26:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2ADeleteBeneficiaryListenquiry() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="IMPSP2ADeleteBeneficiaryListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2ADeleteBeneficiaryListenquiry" duration-ms="2066" started-at="2018-03-16T15:26:18Z" finished-at="2018-03-16T15:26:20Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.FinancialTransactions.IMPSP2ADeleteBeneficiaryListenquiry(FinancialTransactions.java:131)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2ADeleteBeneficiaryListenquiry -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:20Z" finished-at="2018-03-16T15:26:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2ADeleteBeneficiaryListenquiry status=FAILURE method=FinancialTransactions.IMPSP2ADeleteBeneficiaryListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:20Z" finished-at="2018-03-16T15:26:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2AInstantPayment() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="IMPSP2AInstantPayment()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2AInstantPayment" duration-ms="4035" started-at="2018-03-16T15:26:20Z" finished-at="2018-03-16T15:26:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.FinancialTransactions.IMPSP2AInstantPayment(FinancialTransactions.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2AInstantPayment -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:24Z" finished-at="2018-03-16T15:26:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2AInstantPayment status=FAILURE method=FinancialTransactions.IMPSP2AInstantPayment()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="IMPSP2PAddBeneficiary()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2PAddBeneficiary" duration-ms="1952" started-at="2018-03-16T15:26:24Z" finished-at="2018-03-16T15:26:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2PAddBeneficiary -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:24Z" finished-at="2018-03-16T15:26:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2PAddBeneficiary() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:26Z" finished-at="2018-03-16T15:26:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2PAddBeneficiary status=SUCCESS method=FinancialTransactions.IMPSP2PAddBeneficiary()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:26Z" finished-at="2018-03-16T15:26:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2PAddBeneficiaryconfirmation() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="IMPSP2PAddBeneficiaryconfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2PAddBeneficiaryconfirmation" duration-ms="1785" started-at="2018-03-16T15:26:26Z" finished-at="2018-03-16T15:26:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2PAddBeneficiaryconfirmation -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:28Z" finished-at="2018-03-16T15:26:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2PAddBeneficiaryconfirmation status=SUCCESS method=FinancialTransactions.IMPSP2PAddBeneficiaryconfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="IMPSP2PBeneficiaryPaymentConfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2PBeneficiaryPaymentConfirmation" duration-ms="3911" started-at="2018-03-16T15:26:28Z" finished-at="2018-03-16T15:26:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.FinancialTransactions.IMPSP2PBeneficiaryPaymentConfirmation(FinancialTransactions.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2PBeneficiaryPaymentConfirmation -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:28Z" finished-at="2018-03-16T15:26:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2PBeneficiaryPaymentConfirmation() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:32Z" finished-at="2018-03-16T15:26:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2PBeneficiaryPaymentConfirmation status=FAILURE method=FinancialTransactions.IMPSP2PBeneficiaryPaymentConfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:32Z" finished-at="2018-03-16T15:26:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2PBeneficiaryPaymentListenquiry() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="IMPSP2PBeneficiaryPaymentListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2PBeneficiaryPaymentListenquiry" duration-ms="1813" started-at="2018-03-16T15:26:32Z" finished-at="2018-03-16T15:26:34Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.FinancialTransactions.IMPSP2PBeneficiaryPaymentListenquiry(FinancialTransactions.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2PBeneficiaryPaymentListenquiry -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:34Z" finished-at="2018-03-16T15:26:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2PBeneficiaryPaymentListenquiry status=FAILURE method=FinancialTransactions.IMPSP2PBeneficiaryPaymentListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:34Z" finished-at="2018-03-16T15:26:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2PBeneficiarySearchListenquiry() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="IMPSP2PBeneficiarySearchListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2PBeneficiarySearchListenquiry" duration-ms="1683" started-at="2018-03-16T15:26:34Z" finished-at="2018-03-16T15:26:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.FinancialTransactions.IMPSP2PBeneficiarySearchListenquiry(FinancialTransactions.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2PBeneficiarySearchListenquiry -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:36Z" finished-at="2018-03-16T15:26:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2PBeneficiarySearchListenquiry status=FAILURE method=FinancialTransactions.IMPSP2PBeneficiarySearchListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:36Z" finished-at="2018-03-16T15:26:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2PDeleteBeneficiaryConfirmation() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="IMPSP2PDeleteBeneficiaryConfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2PDeleteBeneficiaryConfirmation" duration-ms="1700" started-at="2018-03-16T15:26:36Z" finished-at="2018-03-16T15:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2PDeleteBeneficiaryConfirmation -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:37Z" finished-at="2018-03-16T15:26:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2PDeleteBeneficiaryConfirmation status=SUCCESS method=FinancialTransactions.IMPSP2PDeleteBeneficiaryConfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="IMPSP2PDeleteBeneficiaryListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2PDeleteBeneficiaryListenquiry" duration-ms="1724" started-at="2018-03-16T15:26:37Z" finished-at="2018-03-16T15:26:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2PDeleteBeneficiaryListenquiry -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:37Z" finished-at="2018-03-16T15:26:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2PDeleteBeneficiaryListenquiry() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:39Z" finished-at="2018-03-16T15:26:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2PDeleteBeneficiaryListenquiry status=SUCCESS method=FinancialTransactions.IMPSP2PDeleteBeneficiaryListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:39Z" finished-at="2018-03-16T15:26:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2PInstantPayment() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="IMPSP2PInstantPayment()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2PInstantPayment" duration-ms="3887" started-at="2018-03-16T15:26:39Z" finished-at="2018-03-16T15:26:43Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.FinancialTransactions.IMPSP2PInstantPayment(FinancialTransactions.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2PInstantPayment -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:43Z" finished-at="2018-03-16T15:26:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2PInstantPayment status=FAILURE method=FinancialTransactions.IMPSP2PInstantPayment()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:43Z" finished-at="2018-03-16T15:26:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2UAddBeneficiary() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="IMPSP2UAddBeneficiary()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2UAddBeneficiary" duration-ms="1901" started-at="2018-03-16T15:26:43Z" finished-at="2018-03-16T15:26:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2UAddBeneficiary -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:45Z" finished-at="2018-03-16T15:26:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2UAddBeneficiary status=SUCCESS method=FinancialTransactions.IMPSP2UAddBeneficiary()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="IMPSP2UAddBeneficiaryconfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2UAddBeneficiaryconfirmation" duration-ms="1350" started-at="2018-03-16T15:26:45Z" finished-at="2018-03-16T15:26:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingBasePageObject.BaseObject.assertResponse(BaseObject.java:142)
	at mBankingControlCenter.FinancialTransactions.IMPSP2UAddBeneficiaryconfirmation(FinancialTransactions.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2UAddBeneficiaryconfirmation -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:45Z" finished-at="2018-03-16T15:26:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2UAddBeneficiaryconfirmation() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:46Z" finished-at="2018-03-16T15:26:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2UAddBeneficiaryconfirmation status=FAILURE method=FinancialTransactions.IMPSP2UAddBeneficiaryconfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:46Z" finished-at="2018-03-16T15:26:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2UBeneficiaryPaymentConfirmation() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="IMPSP2UBeneficiaryPaymentConfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2UBeneficiaryPaymentConfirmation" duration-ms="6815" started-at="2018-03-16T15:26:46Z" finished-at="2018-03-16T15:26:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingBasePageObject.BaseObject.assertResponse(BaseObject.java:142)
	at mBankingControlCenter.FinancialTransactions.IMPSP2UBeneficiaryPaymentConfirmation(FinancialTransactions.java:204)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2UBeneficiaryPaymentConfirmation -->
        <test-method status="PASS" signature="IMPSP2UBeneficiaryPaymentListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2UBeneficiaryPaymentListenquiry" duration-ms="1729" started-at="2018-03-16T15:26:53Z" finished-at="2018-03-16T15:26:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2UBeneficiaryPaymentListenquiry -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:53Z" finished-at="2018-03-16T15:26:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2UBeneficiaryPaymentConfirmation status=FAILURE method=FinancialTransactions.IMPSP2UBeneficiaryPaymentConfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:53Z" finished-at="2018-03-16T15:26:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2UBeneficiaryPaymentListenquiry() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:55Z" finished-at="2018-03-16T15:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2UBeneficiaryPaymentListenquiry status=SUCCESS method=FinancialTransactions.IMPSP2UBeneficiaryPaymentListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:26:55Z" finished-at="2018-03-16T15:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2UBeneficiarySearchListenquiry() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="IMPSP2UBeneficiarySearchListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2UBeneficiarySearchListenquiry" duration-ms="1607" started-at="2018-03-16T15:26:55Z" finished-at="2018-03-16T15:26:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2UBeneficiarySearchListenquiry -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:56Z" finished-at="2018-03-16T15:26:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2UBeneficiarySearchListenquiry status=SUCCESS method=FinancialTransactions.IMPSP2UBeneficiarySearchListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:56Z" finished-at="2018-03-16T15:26:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2UDeleteBeneficiaryConfirmation() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="IMPSP2UDeleteBeneficiaryConfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2UDeleteBeneficiaryConfirmation" duration-ms="1682" started-at="2018-03-16T15:26:56Z" finished-at="2018-03-16T15:26:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingBasePageObject.BaseObject.assertResponse(BaseObject.java:142)
	at mBankingControlCenter.FinancialTransactions.IMPSP2UDeleteBeneficiaryConfirmation(FinancialTransactions.java:190)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2UDeleteBeneficiaryConfirmation -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:58Z" finished-at="2018-03-16T15:26:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2UDeleteBeneficiaryConfirmation status=FAILURE method=FinancialTransactions.IMPSP2UDeleteBeneficiaryConfirmation()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:26:58Z" finished-at="2018-03-16T15:26:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2UDeleteBeneficiaryListenquiry() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="IMPSP2UDeleteBeneficiaryListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2UDeleteBeneficiaryListenquiry" duration-ms="2220" started-at="2018-03-16T15:26:58Z" finished-at="2018-03-16T15:27:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2UDeleteBeneficiaryListenquiry -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:27:00Z" finished-at="2018-03-16T15:27:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2UDeleteBeneficiaryListenquiry status=SUCCESS method=FinancialTransactions.IMPSP2UDeleteBeneficiaryListenquiry()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:27:00Z" finished-at="2018-03-16T15:27:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.FinancialTransactions.IMPSP2UInstantPayment() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="IMPSP2UInstantPayment()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="IMPSP2UInstantPayment" duration-ms="787" started-at="2018-03-16T15:27:00Z" finished-at="2018-03-16T15:27:01Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.FinancialTransactions.IMPSP2UInstantPayment(FinancialTransactions.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IMPSP2UInstantPayment -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:27:01Z" finished-at="2018-03-16T15:27:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IMPSP2UInstantPayment status=FAILURE method=FinancialTransactions.IMPSP2UInstantPayment()[pri:0, instance:mBankingControlCenter.FinancialTransactions@32be31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- mBankingControlCenter.FinancialTransactions -->
    </test> <!-- FInancial transaction -->
    <test name="Payment transaction" duration-ms="493484" started-at="2018-03-16T09:57:01Z" finished-at="2018-03-16T10:05:15Z">
      <class name="mBankingControlCenter.PaymentTransactions">
        <test-method status="PASS" signature="setUp()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="setUp" is-config="true" duration-ms="114" started-at="2018-03-16T15:25:25Z" finished-at="2018-03-16T15:25:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:27:01Z" finished-at="2018-03-16T15:27:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.Accountselectionbiilerlist() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="Accountselectionbiilerlist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="Accountselectionbiilerlist" duration-ms="713" started-at="2018-03-16T15:27:01Z" finished-at="2018-03-16T15:27:02Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.Accountselectionbiilerlist(PaymentTransactions.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Accountselectionbiilerlist -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:27:02Z" finished-at="2018-03-16T15:27:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Accountselectionbiilerlist status=FAILURE method=PaymentTransactions.Accountselectionbiilerlist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:27:02Z" finished-at="2018-03-16T15:27:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.AdHocBillercategorylist() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="AdHocBillercategorylist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="AdHocBillercategorylist" duration-ms="92365" started-at="2018-03-16T15:27:02Z" finished-at="2018-03-16T15:28:34Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.AdHocBillercategorylist(PaymentTransactions.java:98)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdHocBillercategorylist -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:28:34Z" finished-at="2018-03-16T15:28:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AdHocBillercategorylist status=FAILURE method=PaymentTransactions.AdHocBillercategorylist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:28:34Z" finished-at="2018-03-16T15:28:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.AdHocbillerlist() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="AdHocbillerlist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="AdHocbillerlist" duration-ms="264" started-at="2018-03-16T15:28:34Z" finished-at="2018-03-16T15:28:34Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.AdHocbillerlist(PaymentTransactions.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdHocbillerlist -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:28:34Z" finished-at="2018-03-16T15:28:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AdHocbillerlist status=FAILURE method=PaymentTransactions.AdHocbillerlist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:28:34Z" finished-at="2018-03-16T15:28:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.Adhocpayconfirm() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="Adhocpayconfirm()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="Adhocpayconfirm" duration-ms="1220" started-at="2018-03-16T15:28:34Z" finished-at="2018-03-16T15:28:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.Adhocpayconfirm(PaymentTransactions.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Adhocpayconfirm -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:28:36Z" finished-at="2018-03-16T15:28:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Adhocpayconfirm status=FAILURE method=PaymentTransactions.Adhocpayconfirm()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:28:36Z" finished-at="2018-03-16T15:28:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.Billercategorylist() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="Billercategorylist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="Billercategorylist" duration-ms="320" started-at="2018-03-16T15:28:36Z" finished-at="2018-03-16T15:28:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.Billercategorylist(PaymentTransactions.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Billercategorylist -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:28:36Z" finished-at="2018-03-16T15:28:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Billercategorylist status=FAILURE method=PaymentTransactions.Billercategorylist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="NEFTQuickFT()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="NEFTQuickFT" duration-ms="1390" started-at="2018-03-16T15:28:36Z" finished-at="2018-03-16T15:28:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.NEFTQuickFT(PaymentTransactions.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NEFTQuickFT -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:28:36Z" finished-at="2018-03-16T15:28:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.NEFTQuickFT() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:28:37Z" finished-at="2018-03-16T15:28:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NEFTQuickFT status=FAILURE method=PaymentTransactions.NEFTQuickFT()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:28:37Z" finished-at="2018-03-16T15:28:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.NEFTbenderegconfirm() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="NEFTbenderegconfirm()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="NEFTbenderegconfirm" duration-ms="2153" started-at="2018-03-16T15:28:37Z" finished-at="2018-03-16T15:28:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.NEFTbenderegconfirm(PaymentTransactions.java:275)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NEFTbenderegconfirm -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:28:40Z" finished-at="2018-03-16T15:28:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NEFTbenderegconfirm status=FAILURE method=PaymentTransactions.NEFTbenderegconfirm()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:28:40Z" finished-at="2018-03-16T15:28:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.NEFTbendereglist() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="NEFTbendereglist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="NEFTbendereglist" duration-ms="1719" started-at="2018-03-16T15:28:40Z" finished-at="2018-03-16T15:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NEFTbendereglist -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:28:41Z" finished-at="2018-03-16T15:28:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NEFTbendereglist status=SUCCESS method=PaymentTransactions.NEFTbendereglist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:28:41Z" finished-at="2018-03-16T15:28:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.NEFTbendetail() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="NEFTbendetail()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="NEFTbendetail" duration-ms="251" started-at="2018-03-16T15:28:41Z" finished-at="2018-03-16T15:28:41Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.NEFTbendetail(PaymentTransactions.java:263)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NEFTbendetail -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:28:41Z" finished-at="2018-03-16T15:28:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NEFTbendetail status=FAILURE method=PaymentTransactions.NEFTbendetail()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="NEFTbenlist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="NEFTbenlist" duration-ms="260" started-at="2018-03-16T15:28:41Z" finished-at="2018-03-16T15:28:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.NEFTbenlist(PaymentTransactions.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NEFTbenlist -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:28:41Z" finished-at="2018-03-16T15:28:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.NEFTbenlist() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:28:42Z" finished-at="2018-03-16T15:28:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NEFTbenlist status=FAILURE method=PaymentTransactions.NEFTbenlist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="NEFTbenpayment()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="NEFTbenpayment" duration-ms="265" started-at="2018-03-16T15:28:42Z" finished-at="2018-03-16T15:28:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.NEFTbenpayment(PaymentTransactions.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NEFTbenpayment -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:28:42Z" finished-at="2018-03-16T15:28:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.NEFTbenpayment() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:28:42Z" finished-at="2018-03-16T15:28:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NEFTbenpayment status=FAILURE method=PaymentTransactions.NEFTbenpayment()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:28:42Z" finished-at="2018-03-16T15:28:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.NEFTbenreg() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="NEFTbenreg()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="NEFTbenreg" duration-ms="1527" started-at="2018-03-16T15:28:42Z" finished-at="2018-03-16T15:28:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.NEFTbenreg(PaymentTransactions.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NEFTbenreg -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:28:44Z" finished-at="2018-03-16T15:28:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NEFTbenreg status=FAILURE method=PaymentTransactions.NEFTbenreg()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:28:44Z" finished-at="2018-03-16T15:28:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.NEFTbenregconfirm() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="NEFTbenregconfirm()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="NEFTbenregconfirm" duration-ms="2635" started-at="2018-03-16T15:28:44Z" finished-at="2018-03-16T15:28:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.NEFTbenregconfirm(PaymentTransactions.java:245)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NEFTbenregconfirm -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:28:46Z" finished-at="2018-03-16T15:28:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NEFTbenregconfirm status=FAILURE method=PaymentTransactions.NEFTbenregconfirm()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="Operatorsearch()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="Operatorsearch" duration-ms="92077" started-at="2018-03-16T15:28:46Z" finished-at="2018-03-16T15:30:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.Operatorsearch(PaymentTransactions.java:133)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Operatorsearch -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:28:46Z" finished-at="2018-03-16T15:28:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.Operatorsearch() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:30:18Z" finished-at="2018-03-16T15:30:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Operatorsearch status=FAILURE method=PaymentTransactions.Operatorsearch()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:30:18Z" finished-at="2018-03-16T15:30:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.P2AQuickFT() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="P2AQuickFT()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="P2AQuickFT" duration-ms="451" started-at="2018-03-16T15:30:18Z" finished-at="2018-03-16T15:30:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.P2AQuickFT(PaymentTransactions.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- P2AQuickFT -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:30:19Z" finished-at="2018-03-16T15:30:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=P2AQuickFT status=FAILURE method=PaymentTransactions.P2AQuickFT()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:30:19Z" finished-at="2018-03-16T15:30:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.P2Pbendelete() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="P2Pbendelete()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="P2Pbendelete" duration-ms="1504" started-at="2018-03-16T15:30:19Z" finished-at="2018-03-16T15:30:20Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.P2Pbendelete(PaymentTransactions.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- P2Pbendelete -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:30:20Z" finished-at="2018-03-16T15:30:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=P2Pbendelete status=FAILURE method=PaymentTransactions.P2Pbendelete()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="RechargeStatusEnq()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="RechargeStatusEnq" duration-ms="92820" started-at="2018-03-16T15:30:20Z" finished-at="2018-03-16T15:31:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.RechargeStatusEnq(PaymentTransactions.java:147)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RechargeStatusEnq -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:30:20Z" finished-at="2018-03-16T15:30:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.RechargeStatusEnq() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:31:53Z" finished-at="2018-03-16T15:31:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RechargeStatusEnq status=FAILURE method=PaymentTransactions.RechargeStatusEnq()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:31:53Z" finished-at="2018-03-16T15:31:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.Rechargeconfirm() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="Rechargeconfirm()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="Rechargeconfirm" duration-ms="471" started-at="2018-03-16T15:31:53Z" finished-at="2018-03-16T15:31:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.Rechargeconfirm(PaymentTransactions.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Rechargeconfirm -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:31:54Z" finished-at="2018-03-16T15:31:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Rechargeconfirm status=FAILURE method=PaymentTransactions.Rechargeconfirm()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:31:54Z" finished-at="2018-03-16T15:31:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.Rechargelist() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="Rechargelist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="Rechargelist" duration-ms="33" started-at="2018-03-16T15:31:54Z" finished-at="2018-03-16T15:31:54Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at mBankingUtilityCenter.ExtentManager.sendReq(ExtentManager.java:110)
	at mBankingControlCenter.PaymentTransactions.Rechargelist(PaymentTransactions.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Rechargelist -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:31:54Z" finished-at="2018-03-16T15:31:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Rechargelist status=FAILURE method=PaymentTransactions.Rechargelist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:31:54Z" finished-at="2018-03-16T15:31:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.RegBillerpay() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="RegBillerpay()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="RegBillerpay" duration-ms="736" started-at="2018-03-16T15:31:54Z" finished-at="2018-03-16T15:31:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.RegBillerpay(PaymentTransactions.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegBillerpay -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:31:54Z" finished-at="2018-03-16T15:31:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegBillerpay status=FAILURE method=PaymentTransactions.RegBillerpay()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:31:54Z" finished-at="2018-03-16T15:31:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.RegBillerpayconfirm() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="RegBillerpayconfirm()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="RegBillerpayconfirm" duration-ms="1298" started-at="2018-03-16T15:31:54Z" finished-at="2018-03-16T15:31:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.RegBillerpayconfirm(PaymentTransactions.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegBillerpayconfirm -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:31:56Z" finished-at="2018-03-16T15:31:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegBillerpayconfirm status=FAILURE method=PaymentTransactions.RegBillerpayconfirm()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:31:56Z" finished-at="2018-03-16T15:31:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.biilerderegselection() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="biilerderegselection()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="biilerderegselection" duration-ms="883" started-at="2018-03-16T15:31:56Z" finished-at="2018-03-16T15:31:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.biilerderegselection(PaymentTransactions.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- biilerderegselection -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:31:56Z" finished-at="2018-03-16T15:31:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=biilerderegselection status=FAILURE method=PaymentTransactions.biilerderegselection()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:31:56Z" finished-at="2018-03-16T15:31:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.biilerlistselection() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="biilerlistselection()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="biilerlistselection" duration-ms="773" started-at="2018-03-16T15:31:56Z" finished-at="2018-03-16T15:31:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.biilerlistselection(PaymentTransactions.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- biilerlistselection -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:31:57Z" finished-at="2018-03-16T15:31:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=biilerlistselection status=FAILURE method=PaymentTransactions.biilerlistselection()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:31:57Z" finished-at="2018-03-16T15:31:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.biilerregistrationconfirm() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="biilerregistrationconfirm()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="biilerregistrationconfirm" duration-ms="976" started-at="2018-03-16T15:31:57Z" finished-at="2018-03-16T15:31:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.biilerregistrationconfirm(PaymentTransactions.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- biilerregistrationconfirm -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:31:58Z" finished-at="2018-03-16T15:31:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=biilerregistrationconfirm status=FAILURE method=PaymentTransactions.biilerregistrationconfirm()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="billerlist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="billerlist" duration-ms="254" started-at="2018-03-16T15:31:58Z" finished-at="2018-03-16T15:31:59Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.billerlist(PaymentTransactions.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- billerlist -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:31:58Z" finished-at="2018-03-16T15:31:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.billerlist() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:31:59Z" finished-at="2018-03-16T15:31:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=billerlist status=FAILURE method=PaymentTransactions.billerlist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:31:59Z" finished-at="2018-03-16T15:31:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.billerlistselection() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="billerlistselection()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="billerlistselection" duration-ms="92379" started-at="2018-03-16T15:31:59Z" finished-at="2018-03-16T15:33:31Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.billerlistselection(PaymentTransactions.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- billerlistselection -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:33:31Z" finished-at="2018-03-16T15:33:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=billerlistselection status=FAILURE method=PaymentTransactions.billerlistselection()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="billerregisration()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="billerregisration" duration-ms="91790" started-at="2018-03-16T15:33:31Z" finished-at="2018-03-16T15:35:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.billerregisration(PaymentTransactions.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- billerregisration -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:33:31Z" finished-at="2018-03-16T15:33:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.billerregisration() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:35:03Z" finished-at="2018-03-16T15:35:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=billerregisration status=FAILURE method=PaymentTransactions.billerregisration()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:35:03Z" finished-at="2018-03-16T15:35:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.m2abenderegsearch() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="m2abenderegsearch()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="m2abenderegsearch" duration-ms="274" started-at="2018-03-16T15:35:03Z" finished-at="2018-03-16T15:35:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.m2abenderegsearch(PaymentTransactions.java:227)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2abenderegsearch -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:35:03Z" finished-at="2018-03-16T15:35:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=m2abenderegsearch status=FAILURE method=PaymentTransactions.m2abenderegsearch()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:35:03Z" finished-at="2018-03-16T15:35:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.m2abendetails() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="m2abendetails()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="m2abendetails" duration-ms="270" started-at="2018-03-16T15:35:03Z" finished-at="2018-03-16T15:35:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.m2abendetails(PaymentTransactions.java:221)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2abendetails -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:35:03Z" finished-at="2018-03-16T15:35:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=m2abendetails status=FAILURE method=PaymentTransactions.m2abendetails()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:35:03Z" finished-at="2018-03-16T15:35:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.m2abenreg() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="m2abenreg()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="m2abenreg" duration-ms="576" started-at="2018-03-16T15:35:03Z" finished-at="2018-03-16T15:35:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.m2abenreg(PaymentTransactions.java:209)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2abenreg -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="2" started-at="2018-03-16T15:35:04Z" finished-at="2018-03-16T15:35:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=m2abenreg status=FAILURE method=PaymentTransactions.m2abenreg()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="m2abensearchreq()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="m2abensearchreq" duration-ms="1808" started-at="2018-03-16T15:35:04Z" finished-at="2018-03-16T15:35:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2abensearchreq -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:35:04Z" finished-at="2018-03-16T15:35:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.m2abensearchreq() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:35:06Z" finished-at="2018-03-16T15:35:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=m2abensearchreq status=SUCCESS method=PaymentTransactions.m2abensearchreq()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="m2mBenAcclist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="m2mBenAcclist" duration-ms="369" started-at="2018-03-16T15:35:06Z" finished-at="2018-03-16T15:35:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.m2mBenAcclist(PaymentTransactions.java:161)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2mBenAcclist -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:35:06Z" finished-at="2018-03-16T15:35:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.m2mBenAcclist() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:35:06Z" finished-at="2018-03-16T15:35:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=m2mBenAcclist status=FAILURE method=PaymentTransactions.m2mBenAcclist()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:35:06Z" finished-at="2018-03-16T15:35:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.m2mBenReg() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="m2mBenReg()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="m2mBenReg" duration-ms="1069" started-at="2018-03-16T15:35:06Z" finished-at="2018-03-16T15:35:07Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.m2mBenReg(PaymentTransactions.java:167)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2mBenReg -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:35:07Z" finished-at="2018-03-16T15:35:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=m2mBenReg status=FAILURE method=PaymentTransactions.m2mBenReg()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="m2mQuickFT()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="m2mQuickFT" duration-ms="3217" started-at="2018-03-16T15:35:07Z" finished-at="2018-03-16T15:35:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2mQuickFT -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:35:07Z" finished-at="2018-03-16T15:35:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.m2mQuickFT() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:35:10Z" finished-at="2018-03-16T15:35:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=m2mQuickFT status=SUCCESS method=PaymentTransactions.m2mQuickFT()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="m2mRegbensearch()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="m2mRegbensearch" duration-ms="265" started-at="2018-03-16T15:35:10Z" finished-at="2018-03-16T15:35:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.m2mRegbensearch(PaymentTransactions.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2mRegbensearch -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:35:10Z" finished-at="2018-03-16T15:35:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.m2mRegbensearch() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:35:11Z" finished-at="2018-03-16T15:35:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=m2mRegbensearch status=FAILURE method=PaymentTransactions.m2mRegbensearch()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="m2mbendelsearch()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="m2mbendelsearch" duration-ms="1707" started-at="2018-03-16T15:35:11Z" finished-at="2018-03-16T15:35:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2mbendelsearch -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:35:11Z" finished-at="2018-03-16T15:35:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.m2mbendelsearch() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:35:12Z" finished-at="2018-03-16T15:35:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=m2mbendelsearch status=SUCCESS method=PaymentTransactions.m2mbendelsearch()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-16T15:35:12Z" finished-at="2018-03-16T15:35:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.m2mbenpayment() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="m2mbenpayment()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="m2mbenpayment" duration-ms="576" started-at="2018-03-16T15:35:12Z" finished-at="2018-03-16T15:35:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mBankingUtilityCenter.ExtentManager.assertResponse(ExtentManager.java:84)
	at mBankingControlCenter.PaymentTransactions.m2mbenpayment(PaymentTransactions.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2mbenpayment -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-16T15:35:13Z" finished-at="2018-03-16T15:35:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=m2mbenpayment status=FAILURE method=PaymentTransactions.m2mbenpayment()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-16T15:35:13Z" finished-at="2018-03-16T15:35:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.PaymentTransactions.m2mbensearch() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="m2mbensearch()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="m2mbensearch" duration-ms="1683" started-at="2018-03-16T15:35:13Z" finished-at="2018-03-16T15:35:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2mbensearch -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-16T15:35:15Z" finished-at="2018-03-16T15:35:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=m2mbensearch status=SUCCESS method=PaymentTransactions.m2mbensearch()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:mBankingControlCenter.PaymentTransactions@10736d9]" name="endReport" is-config="true" duration-ms="249" started-at="2018-03-16T15:35:15Z" finished-at="2018-03-16T15:35:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- mBankingControlCenter.PaymentTransactions -->
    </test> <!-- Payment transaction -->
  </suite> <!-- Positive Transaction flow -->
</testng-results>
