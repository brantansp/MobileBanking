<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="14" passed="14">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="28318" started-at="2018-03-21T14:20:56Z" finished-at="2018-03-21T14:21:25Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="28318" started-at="2018-03-21T14:20:56Z" finished-at="2018-03-21T14:21:25Z">
      <class name="mBankingControlCenter.NonFinancialTransactions">
        <test-method status="PASS" signature="setUp()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="setUp" is-config="true" duration-ms="119" started-at="2018-03-21T19:50:56Z" finished-at="2018-03-21T19:50:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="beforeMethod" is-config="true" duration-ms="5" started-at="2018-03-21T19:50:56Z" finished-at="2018-03-21T19:50:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.AppLogin() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="AppLogin()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="AppLogin" duration-ms="2236" started-at="2018-03-21T19:50:56Z" finished-at="2018-03-21T19:50:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppLogin -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="getResult" is-config="true" duration-ms="6" started-at="2018-03-21T19:50:58Z" finished-at="2018-03-21T19:50:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AppLogin status=SUCCESS method=NonFinancialTransactions.AppLogin()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-21T19:50:58Z" finished-at="2018-03-21T19:50:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.balanceEnq() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="balanceEnq()[pri:1, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="balanceEnq" duration-ms="3955" started-at="2018-03-21T19:50:58Z" finished-at="2018-03-21T19:51:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- balanceEnq -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:02Z" finished-at="2018-03-21T19:51:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=balanceEnq status=SUCCESS method=NonFinancialTransactions.balanceEnq()[pri:1, instance:mBankingControlCenter.NonFinancialTransactions@267ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-03-21T19:51:02Z" finished-at="2018-03-21T19:51:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.MiniStatement() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="MiniStatement()[pri:2, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="MiniStatement" duration-ms="2691" started-at="2018-03-21T19:51:02Z" finished-at="2018-03-21T19:51:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MiniStatement -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-21T19:51:05Z" finished-at="2018-03-21T19:51:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MiniStatement status=SUCCESS method=NonFinancialTransactions.MiniStatement()[pri:2, instance:mBankingControlCenter.NonFinancialTransactions@267ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="TransactionHistory()[pri:3, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="TransactionHistory" duration-ms="1885" started-at="2018-03-21T19:51:05Z" finished-at="2018-03-21T19:51:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TransactionHistory -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:05Z" finished-at="2018-03-21T19:51:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.TransactionHistory() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:07Z" finished-at="2018-03-21T19:51:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TransactionHistory status=SUCCESS method=NonFinancialTransactions.TransactionHistory()[pri:3, instance:mBankingControlCenter.NonFinancialTransactions@267ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:07Z" finished-at="2018-03-21T19:51:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.GenerateMMID() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="GenerateMMID()[pri:4, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="GenerateMMID" duration-ms="1261" started-at="2018-03-21T19:51:07Z" finished-at="2018-03-21T19:51:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GenerateMMID -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-21T19:51:08Z" finished-at="2018-03-21T19:51:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GenerateMMID status=SUCCESS method=NonFinancialTransactions.GenerateMMID()[pri:4, instance:mBankingControlCenter.NonFinancialTransactions@267ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:08Z" finished-at="2018-03-21T19:51:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.RetrieveMMID() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="RetrieveMMID()[pri:5, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="RetrieveMMID" duration-ms="1280" started-at="2018-03-21T19:51:08Z" finished-at="2018-03-21T19:51:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RetrieveMMID -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:10Z" finished-at="2018-03-21T19:51:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RetrieveMMID status=SUCCESS method=NonFinancialTransactions.RetrieveMMID()[pri:5, instance:mBankingControlCenter.NonFinancialTransactions@267ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:10Z" finished-at="2018-03-21T19:51:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.CancelMMIDAll() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="CancelMMIDAll()[pri:6, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="CancelMMIDAll" duration-ms="2406" started-at="2018-03-21T19:51:10Z" finished-at="2018-03-21T19:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelMMIDAll -->
        <test-method status="PASS" signature="CancelMMIDSingle()[pri:7, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="CancelMMIDSingle" duration-ms="2644" started-at="2018-03-21T19:51:12Z" finished-at="2018-03-21T19:51:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelMMIDSingle -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:12Z" finished-at="2018-03-21T19:51:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelMMIDAll status=SUCCESS method=NonFinancialTransactions.CancelMMIDAll()[pri:6, instance:mBankingControlCenter.NonFinancialTransactions@267ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:12Z" finished-at="2018-03-21T19:51:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.CancelMMIDSingle() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="EmailIDFetch()[pri:8, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="EmailIDFetch" duration-ms="1572" started-at="2018-03-21T19:51:15Z" finished-at="2018-03-21T19:51:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EmailIDFetch -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:15Z" finished-at="2018-03-21T19:51:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelMMIDSingle status=SUCCESS method=NonFinancialTransactions.CancelMMIDSingle()[pri:7, instance:mBankingControlCenter.NonFinancialTransactions@267ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:15Z" finished-at="2018-03-21T19:51:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.EmailIDFetch() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-21T19:51:16Z" finished-at="2018-03-21T19:51:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EmailIDFetch status=SUCCESS method=NonFinancialTransactions.EmailIDFetch()[pri:8, instance:mBankingControlCenter.NonFinancialTransactions@267ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="EmailIDUpdate()[pri:9, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="EmailIDUpdate" duration-ms="1046" started-at="2018-03-21T19:51:16Z" finished-at="2018-03-21T19:51:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EmailIDUpdate -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:16Z" finished-at="2018-03-21T19:51:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.EmailIDUpdate() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ChequeStatus()[pri:10, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="ChequeStatus" duration-ms="2466" started-at="2018-03-21T19:51:17Z" finished-at="2018-03-21T19:51:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChequeStatus -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:17Z" finished-at="2018-03-21T19:51:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.ChequeStatus() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:17Z" finished-at="2018-03-21T19:51:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EmailIDUpdate status=SUCCESS method=NonFinancialTransactions.EmailIDUpdate()[pri:9, instance:mBankingControlCenter.NonFinancialTransactions@267ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-21T19:51:20Z" finished-at="2018-03-21T19:51:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChequeStatus status=SUCCESS method=NonFinancialTransactions.ChequeStatus()[pri:10, instance:mBankingControlCenter.NonFinancialTransactions@267ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:20Z" finished-at="2018-03-21T19:51:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.Accountfetch() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Accountfetch()[pri:11, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="Accountfetch" duration-ms="1077" started-at="2018-03-21T19:51:20Z" finished-at="2018-03-21T19:51:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Accountfetch -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:21Z" finished-at="2018-03-21T19:51:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Accountfetch status=SUCCESS method=NonFinancialTransactions.Accountfetch()[pri:11, instance:mBankingControlCenter.NonFinancialTransactions@267ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="StopCheque()[pri:11, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="StopCheque" duration-ms="2661" started-at="2018-03-21T19:51:21Z" finished-at="2018-03-21T19:51:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StopCheque -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:21Z" finished-at="2018-03-21T19:51:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.StopCheque() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:23Z" finished-at="2018-03-21T19:51:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StopCheque status=SUCCESS method=NonFinancialTransactions.StopCheque()[pri:11, instance:mBankingControlCenter.NonFinancialTransactions@267ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-03-21T19:51:23Z" finished-at="2018-03-21T19:51:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mBankingControlCenter.NonFinancialTransactions.changeloginpwd() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="changeloginpwd()[pri:12, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="changeloginpwd" duration-ms="1077" started-at="2018-03-21T19:51:23Z" finished-at="2018-03-21T19:51:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeloginpwd -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-21T19:51:25Z" finished-at="2018-03-21T19:51:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=changeloginpwd status=SUCCESS method=NonFinancialTransactions.changeloginpwd()[pri:12, instance:mBankingControlCenter.NonFinancialTransactions@267ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:mBankingControlCenter.NonFinancialTransactions@267ef4]" name="endReport" is-config="true" duration-ms="8662" started-at="2018-03-21T19:51:25Z" finished-at="2018-03-21T19:51:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- mBankingControlCenter.NonFinancialTransactions -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
